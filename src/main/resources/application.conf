wordCountJob {
  development {
    input {
      topic: "input"
    }

    output {
      topic: "output"
    }

    stopWords: ["a", "an", "the"]

    spark {
      "spark.master": "local[*]"
      "spark.app.name": "example-spark-kafka"
    }
    streamingCheckpointDir: ${java.io.tmpdir}

    kafkaSource {
      // kafka brokers
      "bootstrap.servers": "localhost:9092"
      "group.id": "example"
    }

    kafkaSink {
      // kafka bootstrap
      "bootstrap.servers": "localhost:9092"
    }
  }

  test {
    input {
      topic: "shen-elk-in"
    }

    output {
      topic: "shen-elk-out"
    }

    stopWords: ["a", "an", "the"]

    spark {
      "spark.master": "yarn-client"
      "spark.app.name": "example-spark-kafka"
    }
    streamingCheckpointDir: "/user/P9USER/"

    kafkaSource {
      // kafka brokers
      "bootstrap.servers": "W168PC03:21005"
      // TODO: to use SASL_PLAINTEXT later
      "security.protocol": "PLAINTEXT"
      // kafka group
      "group.id": "example"
    }

    kafkaSink {
      // kafka bootstrap
      "bootstrap.servers": "W168PC03:21005"
      // TODO: to use SASL_PLAINTEXT later
      "security.protocol": "PLAINTEXT"
    }
  }
}
